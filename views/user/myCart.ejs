

<%- include("../../views/partials/user/header") %>
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.6.0/css/fontawesome.min.css" integrity="sha384-NvKbDTEnL+A8F/AA5Tc5kmMLSJHUO868P+lDtTpJIeQdGYaUIuLr4lVGOEA1OcMy" crossorigin="anonymous">

<head>
    <style>
        .cart_item_actions {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .cart_item_actions i {
            cursor: pointer;
            margin: 0 10px;
            font-size: 20px;
        }

        .quantity_buttons {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .quantity_buttons i {
            cursor: pointer;
            font-size: 18px;
            margin: 0 10px;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Rubik', sans-serif;
            font-size: 14px;
            font-weight: 400;
            background: #E0E0E0;
            color: #000000;
        }

        .cart_section {
            width: 100%;
            padding-top: 93px;
            padding-bottom: 111px;
        }

        .cart_title {
            font-size: 30px;
            font-weight: 500;
            text-align: center;
        }

        .cart_items {
            margin-top: 8px;
        }

        .cart_list {
            border: solid 1px #e8e8e8;
            box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.1);
            background-color: #fff;
        }

        .cart_item {
            display: flex;
            align-items: center;
            padding: 15px;
            border-bottom: solid 1px #e8e8e8;
        }

        .cart_item_image {
            width: 133px;
            height: 133px;
            margin-right: 15px;
        }

        .cart_item_image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .cart_item_info {
            display: flex;
            flex-grow: 1;
            justify-content: space-between;
          
        }
        
        .cart_item_product,
        .cart_item_name,
        .cart_item_quantity,
        .cart_item_price,
        .cart_item_total,
        .cart_item_actions {
            display: flex; 
            flex-direction: column;
             justify-content: center;
            text-align: center;
          
        }

        .cart_item_title {
            font-size: 14px;
            font-weight: 400;
            color: rgba(0, 0, 0, 0.5);
        }

        .cart_item_text {
            width:120px;
           
        }

        .order_total {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            width: 100%;
            padding: 10px 30px;
            border-top: solid 1px #e8e8e8;
            background-color: #fff;
            box-shadow: 0px 1px 5px rgba(0, 0, 0, 0.1);
        }

        .order_total_title {
            font-size: 14px;
            color: rgba(0, 0, 0, 0.5);
        }

        .order_total_amount {
            font-size: 18px;
            font-weight: 500;
            margin-left: 15px;
        }

        .cart_buttons {
            margin-top: 60px;
            text-align: right;
        }

        .button {
            display: inline-block;
            background: #0e8ce4;
            border-radius: 5px;
            height: 48px;
            transition: all 200ms ease;
            font-size: 18px;
            color: #fff;
            padding: 0 35px;
            line-height: 48px;
        }

        .button:hover {
            opacity: 0.8;
        }

        .cart_button_clear {
            border: 1px solid #b2b2b2;
            color: #0e8ce4;
        }

        .cart_button_clear:hover {
            border-color: #0e8ce4;
            color: #0e8ce4;
        }

        .cart_button_checkout {
            background-color: #0e8ce4;
        }

        .cart_button_checkout:hover {
            opacity: 0.8;
        }
    </style>
</head>

<div class="cart_section">
    <div class="container-fluid">
        <div class="row">
            <div class="col-lg-10 offset-lg-1">
                <div class="cart_container">
                    <div class="cart_title">Shopping Cart <small> (<%= userCartData.length %> item(s) in your cart) </small></div>
                    
                    <div class="cart_items">
                        <ul class="cart_list">
                            <!-- Displaying the headings once -->
                            <li class="cart_item clearfix">
                                <div class="cart_item_info d-flex flex-md-row flex-column justify-content-between">
                                    <div class="cart_item_product cart_info_col">
                                        <div class="cart_item_title">Product</div>
                                    </div>
                                    <div style="margin-left: -90px;">
                                        <div class="cart_item_title">Name</div>
                                    </div>
                                    <div style="margin-left: -75px;">
                                        <div class="cart_item_title" >Quantity</div>
                                    </div>
                                    <div style="margin-left: -30px;">
                                        <div class="cart_item_title" >Price</div>
                                    </div>
                                    <div style="margin-right: -35px;">
                                        <div class="cart_item_title" >Total</div>
                                    </div>
                                    <div class="cart_item_actions cart_info_col">
                                        <div class="cart_item_title">Actions</div>
                                    </div>
                                </div>
                            </li>

                            <% userCartData.forEach(function(item, index) { %>
                                <div id="cartProduct<%= index %>">
                            <li id="cart-item-<%= item._id %>" class="cart_item clearfix">
                                <div class="cart_item_image"><a href="/product/<%= item.productId._id %>"><img src="/uploads/product-images/<%= item.productId.productImg[0] %>" alt=""></a></div>
                                <div class="cart_item_info d-flex flex-md-row flex-column justify-content-between">
                                    <div class="cart_item_name cart_info_col">
                                        <div class="cart_item_text" ><%= item.productId.productName %></div>
                                    </div>
                                    <div class="cart_item_quantity cart_info_col">
                                        <div class="cart_item_text">
                                            <div class="quantity_buttons" style="margin-left: -120px;">
                                                <button type="button" class="btn btn-danger btn-sm"
                                                 onclick="cartDec('<%= item._id %>','<%= index %>')">-</button>
                                                <span  id="productQty<%= index %>" style="margin-left:15px;margin-right:15px;"><%= item.productQty %></span>
                                                <button type="button" class="btn btn-primary btn-sm"
                                                onclick="cartInc('<%= item._id %>','<%= index %>')">+</button>                                            </div>
                                        </div>
                                    </div>
                                    <div class="cart_item_price cart_info_col" style="margin-left:-60px">
                                        <div class="cart_item_text" id="totalPrice">₹<%= item.productId.salePrice || item.productId.productPrice %></div>
                                    </div>
                                    <div class="cart_item_total cart_info_col">
                                        <div class="cart_item_text" id="totalCostPerProduct<%= index %>">₹<%= item.totalCostPerProduct %></div>
                                        <div class="cart-item-stock">Stock: <span id="stockLimit<%= index %>"><%= item.productStock %></span></div>

                                    </div>
                                    <div class="cart_item_actions cart_info_col">
                                        <button class="btn-m" onclick="deleteCart('<%= item._id %>','<%= index %>')">
                                            <i>x</i>
                                          </button>
                                    </div>
                                </div>
                            </li>
                        </div>
                            <% }); %>
                        </ul>
                    </div>

                    <div class="order_total">
                        <div class="order_total_content text-md-right">
                            <div class="order_total_title">Order Total:</div>
                            <div class="order_total_amount" id="total-price">₹<%= grandTotal %></div>
                        </div>
                    </div>

                    <div class="cart_buttons">
                        
                        <button type="button" class="button cart_button_clear" >
                          <a href="/products" style="color: white;">Continue Shopping</a></button>
                          <!-- <%if(grandTotal>0){%> 
                        <button type="button" class="button cart_button_checkout"> <a href="/checkout" style="color: white;">Checkout</a> </button>
                        <%}%> -->
                        <%if(grandTotal>0){%> 
                            <button type="button" class="button cart_button_checkout" onclick="validateStockAndCheckout()">
                                Checkout
                            </button>
                        <%}%>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



<%- include("../../views/partials/user/footer") %>

<script src="https://kit.fontawesome.com/a076d05399.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Function to update the product quantity
    
    async function cartDec(id, index) {
    try {
        let productQuantityElement = document.getElementById('productQty' + index);
        let totalCostPerProductElement = document.getElementById('totalCostPerProduct' + index);
        let grandTotalElement = document.getElementById('total-price');

        let currentQuantity = Number(productQuantityElement.innerText);
        let productPrice = Number(totalCostPerProductElement.innerText.replace('₹', '')) / currentQuantity; // Get the price per unit

        if (currentQuantity === 1) {
            return Swal.fire({
                icon: "error",
                title: "Minimum One Quantity",
                text: "Please select at least one quantity",
            });
        }

        // Decrease the quantity
        let newQuantity = currentQuantity - 1;
        productQuantityElement.innerText = newQuantity;

        // Calculate the new total cost for this product
        let newTotalCost = productPrice * newQuantity;
        totalCostPerProductElement.innerText = '₹' + newTotalCost;

        // Update the grand total
        let currentGrandTotal = Number(grandTotalElement.innerText.replace('₹', ''));
        grandTotalElement.innerText = '₹' + (currentGrandTotal - productPrice); // Update grand total

        // Send the request to update the quantity in the backend
        await fetch('/decQty/' + id, { method: 'PUT' });
    } catch (error) {
        console.error(error);
    }
}
  </script>
  <!-- increase cart quantity  -->
  <script>
    async function cartInc(id, index) {
    try {
        let stockLimitElement = document.getElementById('stockLimit' + index).innerText;
        let productQuantityElement = document.getElementById('productQty' + index);
        let totalCostPerProductElement = document.getElementById('totalCostPerProduct' + index);
        let grandTotalElement = document.getElementById('total-price');

        // Get the current quantity and price
        let currentQuantity = Number(productQuantityElement.innerText);
        let productPrice = Number(totalCostPerProductElement.innerText.replace('₹', '')) / currentQuantity; // Get the price per unit

        if (currentQuantity >= Number(stockLimitElement)) {
            return Swal.fire({
                icon: "info",
                title: "Maximum Quantity",
                text: "You cannot increase the quantity beyond available stock.",
            });
        }


        if(currentQuantity >= 5){
            return Swal.fire({
                icon: "info",
                title: "Maximum Quantity",
                text: "You cannot increase the quantity beyond 5.",
            });
        }
        // Increase the quantity
        let newQuantity = currentQuantity + 1;
        productQuantityElement.innerText = newQuantity;

        // Calculate the new total cost for this product
        let newTotalCost = productPrice * newQuantity;
        totalCostPerProductElement.innerText = '₹' + newTotalCost;

        // Update the grand total
        let currentGrandTotal = Number(grandTotalElement.innerText.replace('₹', ''));
        grandTotalElement.innerText = '₹' + (currentGrandTotal + productPrice); // Update grand total

        // Send the request to update the quantity in the backend
        await fetch('/incQty/' + id, { method: 'PUT' });
    } catch (error) {
        console.error(error);
    }
}
    
  </script>
  <!-- -- delete cart-- -->
  <script>
    async function deleteCart(id, index) {
      try {
        const result = await Swal.fire({
          title: "Are you sure?",
          text: "You won't be able to revert this!",
          icon: "warning",
          showCancelButton: true,
          confirmButtonColor: "#3085d6",
          cancelButtonColor: "#d33",
          confirmButtonText: "Yes, delete it!"
        });

        if (result.isConfirmed) {
          let cartProductElement = document.getElementById('cartProduct' + index);
          cartProductElement.style.display = "none";

          const response = await fetch('/removeFromCart/' + id, { method: 'DELETE' });
          if (response.ok) {
            location.reload();
            Swal.fire({
              title: "Deleted!",
              text: "Your file has been deleted.",
              icon: "success"
            });
          } else {
            throw new Error('Failed to delete cart item.');
          }
        }
      } catch (error) {
        console.error(error);
      }
    }
</script>
<script>
    async function validateStockAndCheckout() {
        try {
            // Check stock for all cart items
            const response = await fetch('/validate-stock', {
                method: 'GET',
                headers: {
                    'Content-Type': 'application/json'
                }
            });
    

           
            const result = await response.json();
      console.log("result",result)
            if (result.valid) {
                // If stock is valid, proceed to checkout
                window.location.href = '/checkout';
            } else {
                // If any item is out of stock
                Swal.fire({
                    icon: 'error',
                    title: 'Out of Stock',
                    text: result.message || 'Some items in your cart are out of stock',
                    showConfirmButton: true,
                    confirmButtonText: 'Refresh Cart',
                }).then((result) => {
                    if (result.isConfirmed) {
                        location.reload(); // Refresh the page to update stock
                    }
                });
            }
        } catch (error) {
            console.error('Error validating stock:', error);
            Swal.fire({
                icon: 'error',
                title: 'Error',
                text: 'Something went wrong. Please try again.',
            });
        }
    }
    </script>
    