<%- include("../../views/partials/admin/header") %>
    <link rel="stylesheet"
        href="https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@6.6.0/css/fontawesome.min.css"
        integrity="sha384-NvKbDTEnL+A8F/AA5Tc5kmMLSJHUO868P+lDtTpJIeQdGYaUIuLr4lVGOEA1OcMy" crossorigin="anonymous">

    <head>
        <style>
            .thumbnails-container {
                display: flex;
                overflow-x: auto;
            }


            .thumbnail {
                margin-right: 10px;
            }

            .input-upload {
                position: relative;
            }


            .error-message {
                color: red;
                display: none;
            }
        </style>
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.css">
    </head>
    <section class="content-main">
        <div class="row">
            <div class="col-9">
                <div class="content-header">
                    <h2 class="content-title">Edit Product</h2>


                </div>
            </div>
            <div class="col-lg-6">
                <div class="card mb-4">


                    <div class="card-body">
                        <form method="post" action="/admin/editProduct/<%=product._id%>" enctype="multipart/form-data"
                            >
                            <div class="mb-4">
                                <label for="product_name" class="form-label">Product Name</label>
                                <input type="text" name="productName" value="<%=product.productName%>"
                                    class="form-control border" id="product_name">
                                <div id="productName-error" class="error-message"></div>
                            </div>
                            <!-- <div class="col-lg-4 mb-4">
                               <label class="form-label">Brand</label>
                               <select class="form-select border" name="brand">
                                  
                                       <option value="">
                                          
                                       </option>
                                      
                               </select>
                               <div id="brand-error" class="error-message"></div>


                           </div> -->
                            <div class="mb-4">
                                <label class="form-label">Full description</label>
                                <input name="descriptionData" value="<%=product.description%>"
                                    class="form-control border" rows="4">
                                <div id="description-error" class="error-message"></div>
                            </div>
                            <div class="row">
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Regular price</label>
                                        <input placeholder="â‚¹" name="regularPrice" type="text"
                                            value="<%=product.regularPrice%>" class="form-control border">
                                        <div id="regularPrice-error" class="error-message"></div>
                                    </div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Sale price</label>
                                        <input name="salePrice" type="text" value="<%=product.salePrice%>"
                                            class="form-control border">
                                    </div>
                                    <div id="salePrice-error" class="error-message"></div>
                                </div>
                                <div class="col-lg-4">
                                    <div class="mb-4">
                                        <label class="form-label">Quantity</label>
                                        <input name="quantity" type="text" value="<%=product.quantity%>"
                                            class="form-control border">
                                        <div id="quantity-error" class="error-message"></div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">

                              

                            </div>
                            <div class="card mb-4">


                                <div class="card-body">
                                    <div class="row gx-2">
                                        <div class="col-sm-6 mb-3">
                                            <label class="form-label">Category</label>
                                            <select class="form-select border" style="width: 150px;" name="category">
                                                <% for (let i = 0; i < listedCategories.length; i++) { %>
                                                    <option value="<%= listedCategories[i]._id %>" 
                                                        <% if (listedCategories[i]._id.toString() === product.category.toString()) { %> 
                                                            selected 
                                                        <% } %>
                                                    >
                                                        <%= listedCategories[i].name %>
                                                    </option>
                                                <% } %>
                                            </select>


                                            <div id="category-error" class="error-message"></div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="card mb-2">
                                <div class="card-header">
                                    <h4>Choose images</h4>
                                </div>
                                <% if (product && product.productImg && product.productImg.length> 0) { %>
                                    <!-- Check if product and productImg exist -->

                                    <%for(let i=0;i<product.productImg.length;i++){%>
                                        <div class="col-md-12">
                                            <div class="mb-4">
                                                <div class="col-12">
                                                    <td>
                                                        <input type="hidden" value="<%= product.productImg[i] %>" id="imageDatas<%= i %>">
                            <img id="image<%= i %>" class="rounded" style="width: 50px; height: 60px;"
                                src="/uploads/product-images/<%= product.productImg[i] %>" alt="Image <%= i + 1 %>">
                            
                                
                                <i onclick="deleteSingleImage('<%= product.productImg[i] %>', '<%= product._id %>')"
                                    style="cursor: pointer;" class="fa-thin fa-x"></i>
                            
                            <!-- Hidden Cropping UI for image editing -->
                          
                                                    </td>
                                                </div>

                                            </div>
                                        </div>
                                        <%}%>
                                            <% } else { %>
                                                <p>No images available for this product.</p>
                                                <!-- Show a message if no images are available -->
                                                <% } %>





                                                    <div class="card-body">
                                                        <div class="card-body align-items-center"
                                                            style="margin-bottom: 20px;">
                                                            <img src="" alt="" id="imgView1">
                                                            <input class="form-control" type="file" name="images"
                                                                id="input1" accept="image/png, image/jpeg, image/jpg"
                                                               multiple onchange="viewImage1(event), viewImage(event, 1)">
                                                            <div id="images-error" class="error-message"></div>
                                                        </div>
                                                        <div class="image-cropper d-flex align-items-center"
                                                            style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                            <img src="" id="croppedImg1" alt="">
                                                            <button type="button" id="saveButton1"
                                                                class="btn-sm btn-primary">Save</button>
                                                                <button type="button" id="removeButton1"
                                                                class="btn-sm btn-primary" style="margin-left: 12px;" onclick="window.location.reload()">Remove</button>
                                                        </div>
                                                        <div class="row">
                                                            <div class="card-body align-items-center"
                                                                style="margin-bottom: 20px;">
                                                                <img src="" alt="" id="imgView2">
                                                                <input class="form-control" type="file" name="images"
                                                                    id="input2"
                                                                    accept="image/png, image/jpeg, image/jpg"
                                                                    onchange="viewImage2(event),viewImage(event, 2)">
                                                            </div>
                                                            <div class="image-cropper d-flex align-items-center"
                                                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                <img src="" id="croppedImg2" alt="">
                                                                <button type="button" id="saveButton2"
                                                               
                                                                    class="btn-sm btn-primary">Save</button>
                                                                    <button type="button" id="removeButton2"
                                                                class="btn-sm btn-primary" style="margin-left: 12px;" onclick="window.location.reload()">Remove</button>

                                                            </div>
                                                        </div>

                                                        <div class="row">
                                                            <div class="card-body align-items-center"
                                                                style="margin-bottom: 20px;">
                                                                <img src="" alt="" id="imgView3">
                                                                <input class="form-control" type="file" name="images"
                                                                    id="input3"
                                                                    accept="image/png, image/jpeg, image/jpg"
                                                                    onchange="viewImage3(event),viewImage(event, 3)">
                                                            </div>
                                                            <div class="image-cropper d-flex align-items-center"
                                                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                <img src="" id="croppedImg3" alt="">
                                                                <button type="button" id="saveButton3"
                                                                    class="btn-sm btn-primary">Save</button>
                                                                    <button type="button" id="removeButton3"
                                                                class="btn-sm btn-primary" style="margin-left: 12px;" onclick="window.location.reload()">Remove</button>
                                                            </div>
                                                        </div>

                                                        <div class="row">
                                                            <div class="card-body align-items-center"
                                                                style="margin-bottom: 20px;">
                                                                <img src="" alt="" id="imgView4">
                                                                <input class="form-control" type="file" name="images"
                                                                    id="input4"
                                                                    accept="image/png, image/jpeg, image/jpg"
                                                                    onchange="viewImage4(event),viewImage(event, 4)">
                                                            </div>
                                                            <div class="image-cropper d-flex align-items-center"
                                                                style="display:none; width: 300px; height: 200px; margin-bottom: 20px;">
                                                                <img src="" id="croppedImg4" alt="">
                                                                <button type="button" id="saveButton4"
                                                                    class="btn-sm btn-primary">Save</button>
                                                                    <button type="button" id="removeButton4"
                                                                class="btn-sm btn-primary" style="margin-left: 12px;" onclick="window.location.reload()">Remove</button>
                                                            </div>
                                                        </div>
                                                    </div>
                            </div>
                            <div>


                                <button class="btn btn-md rounded font-sm hover-up btn-success" id="updatebtn"
                                    type="submit" onclick="validateAndSubmit()">Update</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        </div>
    </section>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <script src="https://cdn.jsdelivr.net/npm/cropperjs/dist/cropper.min.js"></script>

    <%- include("../../views/partials/admin/footer") %>

        <script>
            let totalImages = Number('<%= existingImages.length %>');


            

            function editImage(imageName, productId, index) {
    // Show the cropping container
    document.getElementById('croppingContainer').style.display = 'block';

    // Set the image source to the selected image to crop
    const imageUrl = `/uploads/product-images/${imageName}`;
    const image = document.getElementById('croppedImagePreview');
    
    // Ensure the image is loaded before initializing the cropper
    image.onload = function() {
        // Initialize the cropper only after the image is loaded
        const cropper = new Cropper(image, {
            aspectRatio: 1, // Set aspect ratio if needed
            viewMode: 1,
            background: false,
            zoomable: true,
        });

        // Save the cropped image
        document.getElementById('saveCroppedImage').addEventListener('click', function() {
            const canvas = cropper.getCroppedCanvas();
            
            if (canvas) {
                const croppedImageSrc = canvas.toDataURL(); // Get the cropped image
                
                // Update the preview
                document.getElementById(`imgView${index}`).src = croppedImageSrc;
                
                // Optionally, you can update the image input file (to send the cropped image to the server)
                const inputFile = document.getElementById(`input${index}`);
                canvas.toBlob(function(blob) {
                    const file = new File([blob], `cropped-${imageName}`, { type: 'image/png' });
                    const dataTransfer = new DataTransfer();
                    dataTransfer.items.add(file);
                    inputFile.files = dataTransfer.files;
                });

                // Hide the cropping container
                document.getElementById('croppingContainer').style.display = 'none';
            } else {
                console.error("Error cropping the image.");
            }
        });

        // Cancel the cropping
        document.getElementById('cancelCroppedImage').addEventListener('click', function() {
            document.getElementById('croppingContainer').style.display = 'none';
        });
    };
    
    // Set the image source (this will trigger the 'onload' event)
    image.src = imageUrl;
}


            function validateForm() {
                let imageDatas = false
                console.log("validate form");
                clearErrorMessages();
                const name = document.getElementsByName('productName')[0].value;
                const description = document.getElementsByName('descriptionData')[0].value;
                const price = document.getElementsByName('regularPrice')[0].value;
                const saleprice = document.getElementsByName('salePrice')[0].value;
                const category = document.getElementsByName('category')[0].value;
                const images = document.getElementById('input1')
                const quantity = document.getElementsByName('quantity')
                imageDatas = document.getElementById("imageDatas")?.value;
                let isValid = true;
                if (name.trim() === "") {
                    console.log("inside name")
                    displayErrorMessage('productName-error', 'Please enter a product name.');
                    isValid = false;
                }

                if (description === '') {
                    displayErrorMessage('description-error', 'Please enter a product description.');
                    isValid = false;
                }


                if (parseInt(quantity) < 0) {
                    displayErrorMessage('quantity-error', 'Please enter a valid non-negative quantity.');
                    isValid = false;
                }




                if (!/^\d+(\.\d{1,2})?$/.test(price) || parseFloat(price) < 0) {
                    displayErrorMessage('regularPrice-error', 'Please enter a valid non-negative price.');
                    isValid = false;
                }
                if (!/^\d+(\.\d{1,2})?$/.test(saleprice) || parseFloat(saleprice) < 0) {
                    displayErrorMessage('salePrice-error', 'Please enter a valid non-negative price.');
                    isValid = false;
                }

               
                for (let i = 1; i <= 4; i++) {
                    const input = document.getElementById(`input${i}`);
                    if (input && input.files) {
                        totalImages += input.files.length;
                    }
                }

                if (totalImages < 3) {
                    displayErrorMessage('images-error', 'Please upload at least three images.');
                    isValid = false;
                }
                return isValid;
            }

            function displayErrorMessage(elementId, message) {
                var errorElement = document.getElementById(elementId);
                errorElement.innerText = message;
                errorElement.style.display = "block";
            }


            function clearErrorMessages() {
                const errorElements = document.getElementsByClassName('error-message');
                Array.from(errorElements).forEach(element => {
                    element.innerText = '';
                });
                const errorMessage = document.getElementById('errorMessage');


            }




            function viewImage1(event) {
                document.getElementById('imgView1').src = URL.createObjectURL(event.target.files[0])
            }


            function viewImage2(event) {
                document.getElementById('imgView2').src = URL.createObjectURL(event.target.files[0])
            }


            function viewImage3(event) {
                document.getElementById('imgView3').src = URL.createObjectURL(event.target.files[0])
            }


            function viewImage4(event) {
                document.getElementById('imgView4').src = URL.createObjectURL(event.target.files[0])
            }



            function viewImage(event, index) {
    let input = event.target;
    let file = input.files[0]; // Get the selected file

    // Check if the file is an image
    if (!file || !file.type.startsWith('image/')) {
        alert("Please select a valid image file.");
        return;
    }

    // Use FileReader to read the selected image file
    let reader = new FileReader();
    reader.onload = function() {
        let dataURL = reader.result; // Get the data URL from FileReader
        let image = document.getElementById('imgView' + index); // Get the respective image element
        image.src = dataURL; // Set the src to the data URL

        // Optionally, you can log the result for debugging purposes
        console.log('Image URL set for index ' + index + ':', dataURL);

        // Enable the cropper for the newly uploaded image
        let cropper = new Cropper(image, {
            aspectRatio: 1,
            viewMode: 1,
            guides: true,
            background: false,
            autoCropArea: 1,
            zoomable: true
        });

        // Show the cropping UI
        let cropperContainer = document.querySelector('#croppedImg' + index).parentNode;
        cropperContainer.style.display = 'block';
        
        // Attach the event for saving the cropped image
        let saveButton = document.querySelector('#saveButton' + index);
        saveButton.addEventListener('click', async function () {
            let croppedCanvas = cropper.getCroppedCanvas();
            let croppedImage = document.getElementById("croppedImg" + index);
            croppedImage.src = croppedCanvas.toDataURL('image/jpeg', 1.0);

            let timestamp = new Date().getTime();
            let fileName = `cropped-img-${timestamp}-${index}.png`;
            await croppedCanvas.toBlob(blob => {
                let input = document.getElementById('input' + index);
                let imgFile = new File([blob], fileName, blob);
                const fileList = new DataTransfer();
                fileList.items.add(imgFile);
                input.files = fileList.files;
            });
            cropperContainer.style.display = 'none'; // Hide the cropper after saving
        });
    };
    reader.readAsDataURL(file); // Read the file as a Data URL
}



            const selectedImages = [];
            document.addEventListener("DOMContentLoaded", function () {
                // For input1
                document.getElementById('input1').addEventListener("change", function (event) {
                    handleFileSelect(event, 1);
                });

                // For input2
                document.getElementById('input2').addEventListener("change", function (event) {
                    handleFileSelect(event, 2);
                });

                // For input3
                document.getElementById('input3').addEventListener("change", function (event) {
                    handleFileSelect(event, 3);
                });

                // For input4
                document.getElementById('input4').addEventListener("change", function (event) {
                    handleFileSelect(event, 4);
                });
            });


            function handleFileSelect(event) {
                const addedImagesContainer = document.getElementById("addedImagesContainer");
                addedImagesContainer.innerHTML = "";
                const files = event.target.files;
                for (let i = 0; i < files.length; i++) {
                    const file = files[i];
                    selectedImages.push(file);
                    const thumbnail = document.createElement("div");
                    thumbnail.classList.add("thumbnail");
                    const img = document.createElement("img");
                    img.src = URL.createObjectURL(file);
                    img.alt = "thumbnail";
                    img.style.width = "50px";
                    img.style.height = "auto";
                    const removeIcon = document.createElement("span");
                    removeIcon.classList.add("remove-icon");
                    removeIcon.innerHTML = "&times;";
                    removeIcon.addEventListener("click", function () {
                        const index = selectedImages.indexOf(file);
                        if (index !== -1) {
                            selectedImages.splice(index, 1);
                        }
                        thumbnail.remove();
                    });
                    thumbnail.appendChild(img);
                    thumbnail.appendChild(removeIcon);
                    addedImagesContainer.appendChild(thumbnail);
                }
            };


           
               
              
           
                function deleteSingleImage(imageId, productId) {
                    const confirmation = window.confirm('Are you sure you want to delete this image?');
                    if(confirmation){
    console.log('Delete button clicked');
    console.log('Image ID:', imageId, 'Product ID:', productId);

    // Using fetch instead of $.ajax
    fetch('/admin/deleteImage', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
        },
        body: JSON.stringify({
            imageNameToServer: imageId,
            productIdToServer: productId,
        }),
    })
    .then(response => response.json())
    .then(data => {
        if (data.status === true) {
            window.location.reload();
        } else {
            // Display an error message
            alert(data.message || 'Failed to delete image.');
        }
    })
    .catch(error => {
        console.error('Error during image deletion:', error);
    });
}else {
        // If not confirmed, simply return without deleting
        console.log('Image delete canceled');
    }
}


function validateAndSubmit(event) {
                event.preventDefault();  // Prevent form submission if validation fails
                if (validateForm()) {
                    document.forms[0].submit(); // If validation passes, submit the form
                }
            }

            // Bind the validateAndSubmit function to form submission
            document.addEventListener('DOMContentLoaded', function () {
                const form = document.querySelector('form');
                form.addEventListener('submit', validateAndSubmit); // Bind to form submit
            });


        </script>