<%- include("../../views/partials/admin/header") %>

<style>
    .main {
        display: inline-flex;
        flex-direction: column;
        column-gap: 15px;
    }

    .mybtn {
        margin: 20px;
    }

    .box-main {
        width: 300px;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 8px;
        background-color: #f9f9f9;
        display: flex;
        justify-content: center;
        align-items: center;
        text-align: center;
        margin: 100px;
        margin-left: 500px;
    }
    .report-heading {
        text-align: center;
        font-size: 24px;
        font-weight: bold;
        margin-bottom: 20px;
        text-decoration: underline;
    }

    .report-summary {
        margin-top: 20px;
        font-size: 16px;
        margin-bottom: 20px;
    }

    .report-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

    .report-table th, .report-table td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: center;
    }

    .report-table th {
        background-color: #f2f2f2;
    }

    .download-buttons {
        margin-top: 20px;
        text-align: center;
    }

    .download-buttons button {
        padding: 10px 20px;
        margin: 5px;
        cursor: pointer;
        background-color: #4CAF50;
        color: white;
        border: none;
        border-radius: 5px;
        font-size: 16px;
    }
    .download-buttons button:hover {
        background-color: #45a049;
    }
    .report-container {
        width: 80%;
        max-width: 1200px;
        margin: 40px auto;
        padding: 20px;
        border: 2px solid #ccc;
        border-radius: 8px;
        background-color: #f9f9f9;
    }
    .order-details {
        margin-top: 20px;
    }

    .order-item {
        margin-bottom: 20px;
        padding: 10px;
        border: 1px solid #ddd;
        border-radius: 8px;
        background-color: #f4f4f4;
    }

    .order-details h4 {
        margin-top: 10px;
        font-weight: bold;
        margin-bottom: 15px;
    }
    .h4order{
        text-align: center;
    }
    .megaborder{
        border: 2px solid black;
        padding: 12px;
    }

    .pagination-button {
        padding: 8px 16px;
        margin: 5px;
        cursor: pointer;
        background-color: #f2f2f2;
        border: 1px solid #ddd;
        border-radius: 5px;
    }

    .pagination-button.active {
        background-color: #4CAF50;
        color: white;
    }

    .pagination-button:hover {
        background-color: #ddd;
    }
</style>

<h3 class="text-center"><strong>Sales Report</strong></h3>
<div class="box-main">
    <form id="reportForm" class="main">
        <label for="reportType">Select Report Type:</label>
        <select id="reportType" name="reportType">
            <option value="daily">Daily</option>
            <option value="weekly">Weekly</option>
            <option value="monthly">Monthly</option>
            <option value="yearly">Yearly</option>
            <option value="custom">Custom Date Range</option>
        </select>

        <div id="customDateRange" style="display: none;">
            <label for="startDate">Start Date:</label>
            <input type="date" id="startDate" name="startDate">
            <label for="endDate">End Date:</label>
            <input type="date" id="endDate" name="endDate">
        </div>

        <button type="submit" class="btn btn-success mybtn">Generate Report</button>
    </form>
</div>

<div id="reportContainer"></div>
<div id="paginationControls" class="text-center"></div>

<div id="downloadButtons" class="download-buttons text-center" style="display: none;">
    <button onclick="downloadReport('pdf')">Download PDF</button>
    <button onclick="downloadReport('excel')">Download Excel</button>
</div>

<%- include("../../views/partials/admin/footer") %>

<script>
    // Toggle custom date range visibility
    document.getElementById('reportType').addEventListener('change', function () {
        const customDateRange = document.getElementById('customDateRange');
        customDateRange.style.display = this.value === 'custom' ? 'block' : 'none';
    });

    let currentPage = 1;
    const itemsPerPage = 5; // Adjust as needed

    async function fetchReport(page = 1) {
        const formData = new FormData(document.getElementById('reportForm'));
        formData.set('page', page);
        formData.set('itemsPerPage', itemsPerPage);

        const response = await fetch('/admin/generate-sales-report', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(Object.fromEntries(formData))
        });

        if (response.ok) {
            const reportData = await response.json();
            displayReport(reportData);
            setupPagination(reportData.totalPages, page);
            document.getElementById('downloadButtons').style.display = 'block'; 
        } else {
            alert('Error generating report');
        }
    }

    function displayReport(reportData) {
        const reportContainer = document.getElementById('reportContainer');
        reportContainer.innerHTML = ''; // Clear previous report

        // Create a summary section
        const summaryHTML = `
            <div class="report-summary">
                <p>Total Sales Count: ${reportData.totalSalesCount}</p>
                <p>Total Order Amount: ${reportData.totalOrderAmount.toFixed(2)}</p>
                <p>Total Discount: ${reportData.totalDiscount.toFixed(2)}</p>
            </div>
        `;
        reportContainer.innerHTML += summaryHTML;

        // Create a table for order details
        let tableHTML = `
            <table class="report-table">
                <thead>
                    <tr>
                        <th>Order ID</th>
                        <th>Order Date</th>
                        <th>Grand Total</th>
                        <th>Discount</th>
                       
                    </tr>
                </thead>
                <tbody>
        `;

        reportData.orders.forEach(order => {
            tableHTML += `
                <tr>
                    <td>${order._id}</td>
                    <td>${new Date(order.orderDate).toLocaleDateString()}</td>
                    <td>${order.grandTotalCost.toFixed(2)}</td>
                    <td>${order.discountAmount.toFixed(2)}</td>
                    
                </tr>
            `;
        });

        tableHTML += '</tbody></table>';
        reportContainer.innerHTML += tableHTML;
    }

    function setupPagination(totalPages, currentPage) {
        let paginationHTML = '';
        for (let i = 1; i <= totalPages; i++) {
            paginationHTML += `<button onclick="fetchReport(${i})" class="pagination-button ${i === currentPage ? 'active' : ''}">${i}</button>`;
        }
        document.getElementById('paginationControls').innerHTML = paginationHTML;
    }

    document.getElementById('reportForm').addEventListener('submit', function (event) {
        event.preventDefault();
        fetchReport(1);
    });

    // Download the report as PDF or Excel
    function downloadReport(format) {
        const formData = new FormData(document.getElementById('reportForm'));
        formData.set('downloadFormat', format); // Set download format dynamically

        fetch('/admin/generate-sales-report', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(Object.fromEntries(formData))
        }).then(response => {
            if (response.ok) {
                const contentDisposition = response.headers.get('Content-Disposition');
                const filename = contentDisposition ? contentDisposition.split('filename=')[1].replace(/"/g, '') : 'sales_report';

                response.blob().then(blob => {
                    const url = window.URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = filename;
                    document.body.appendChild(a);
                    a.click();
                    a.remove();
                });
            } else {
                alert('Error generating the report file.');
            }
        });
    }

</script>
